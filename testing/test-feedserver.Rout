
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(httr)
> library(jsonlite)
> 
> system("rm -rf /tmp/rocksdb_*")
> system("../build/feedserver 2>/dev/null >/dev/null &")
> 
> Sys.sleep(3)
> 
> feedserver_url = 'http://0.0.0.0:8000'
> uri <- function(action){
+   paste0(feedserver_url,'/',action)
+ }
> 
> shutdown_server <- function(){
+   GET(uri('shutdown'))
+ }
> 
> req <- list(`user`='user1', `feeds`='feed1')
> 
> # Subscribe user1 -> feed1
> ret <- PUT(uri('subscribeuser'),body=toJSON(req))
> print(ret)
Response [http://0.0.0.0:8000/subscribeuser]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 111 B
{
"user": {
"name": "user1",
"uri": "/user/user1"
},
"feeds": [
{
"name": "feed1",
"uri": "/feed/feed1"
}
...
> content(ret)
$user
$user$name
[1] "user1"

$user$uri
[1] "/user/user1"


$feeds
$feeds[[1]]
$feeds[[1]]$name
[1] "feed1"

$feeds[[1]]$uri
[1] "/feed/feed1"



> 
> # Subscribe user1 -> feed2
> req$feeds <- 'feed2'
> ret <- PUT(uri('subscribeuser'),body=toJSON(req))
> print(ret)
Response [http://0.0.0.0:8000/subscribeuser]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 155 B
{
"user": {
"name": "user1",
"uri": "/user/user1"
},
"feeds": [
{
"name": "feed1",
"uri": "/feed/feed1"
}
...
> content(ret)
$user
$user$name
[1] "user1"

$user$uri
[1] "/user/user1"


$feeds
$feeds[[1]]
$feeds[[1]]$name
[1] "feed1"

$feeds[[1]]$uri
[1] "/feed/feed1"


$feeds[[2]]
$feeds[[2]]$name
[1] "feed2"

$feeds[[2]]$uri
[1] "/feed/feed2"



> 
> # Unsubscribe user1 -> feed1
> req$feeds <- 'feed1'
> ret <- PUT(uri('unsubscribeuser'),body=toJSON(req))
> print(ret)
Response [http://0.0.0.0:8000/unsubscribeuser]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 111 B
{
"user": {
"name": "user1",
"uri": "/user/user1"
},
"feeds": [
{
"name": "feed2",
"uri": "/feed/feed2"
}
...
> content(ret)
$user
$user$name
[1] "user1"

$user$uri
[1] "/user/user1"


$feeds
$feeds[[1]]
$feeds[[1]]$name
[1] "feed2"

$feeds[[1]]$uri
[1] "/feed/feed2"



> 
> # Unsubscribe user1 -> feed2
> req$feeds <- 'feed2'
> ret <- PUT(uri('unsubscribeuser'),body=toJSON(req))
> print(ret)
Response [http://0.0.0.0:8000/unsubscribeuser]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 69 B
{
"user": {
"name": "user1",
"uri": "/user/user1"
},
"feeds": [
]
}
> content(ret)
$user
$user$name
[1] "user1"

$user$uri
[1] "/user/user1"


$feeds
list()

> 
> # Get user1
> ret <- GET(uri('user/user1'))
> print(ret)
Response [http://0.0.0.0:8000/user/user1]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 68 B
{
"user": {
"name": "user1",
"uri": "/user/user1"
},
"feeds": [
]
}
> content(ret)
$user
$user$name
[1] "user1"

$user$uri
[1] "/user/user1"


$feeds
list()

> 
> # Submit feed1 - article1
> fareq <- list(`articles`=list(list(`content`='article1'),list(`content`='article2')))
> ret <- POST(uri('feed/feed1'),body=toJSON(fareq))
> print(ret)
Response [http://0.0.0.0:8000/feed/feed1]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 77 B
{
"articles": [
{"disposition": "written"}
,
{"disposition": "written"}
]
}
> content(ret)
$articles
$articles[[1]]
$articles[[1]]$disposition
[1] "written"


$articles[[2]]
$articles[[2]]$disposition
[1] "written"



> 
> # Submit feed2 - article1
> fareq <- list(`articles`=list(list(`content`='lorem ipsum'),list(`content`='blah blah')))
> ret <- POST(uri('feed/feed2'),body=toJSON(fareq))
> print(ret)
Response [http://0.0.0.0:8000/feed/feed2]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 77 B
{
"articles": [
{"disposition": "written"}
,
{"disposition": "written"}
]
}
> content(ret)
$articles
$articles[[1]]
$articles[[1]]$disposition
[1] "written"


$articles[[2]]
$articles[[2]]$disposition
[1] "written"



> 
> # Subscribe user1 -> feed1
> req$feeds <- 'feed1'
> ret <- PUT(uri('subscribeuser'),body=toJSON(req))
> print(ret)
Response [http://0.0.0.0:8000/subscribeuser]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 111 B
{
"user": {
"name": "user1",
"uri": "/user/user1"
},
"feeds": [
{
"name": "feed1",
"uri": "/feed/feed1"
}
...
> content(ret)
$user
$user$name
[1] "user1"

$user$uri
[1] "/user/user1"


$feeds
$feeds[[1]]
$feeds[[1]]$name
[1] "feed1"

$feeds[[1]]$uri
[1] "/feed/feed1"



> 
> # Get articles for user1
> ret <- GET(uri('userarticles/user1'))
> print(ret)
Response [http://0.0.0.0:8000/userarticles/user1]
  Date: 2017-05-28 19:11
  Status: 200
  Content-Type: application/json
  Size: 94 B
{"articles":[
{"feed":"feed1","content":"article1"},
{"feed":"feed1","content":"article2"}
]}
> content(ret)
$articles
$articles[[1]]
$articles[[1]]$feed
[1] "feed1"

$articles[[1]]$content
[1] "article1"


$articles[[2]]
$articles[[2]]$feed
[1] "feed1"

$articles[[2]]$content
[1] "article2"



> 
> ret <- shutdown_server()
> print(ret)
Response [http://0.0.0.0:8000/shutdown]
  Date: 2017-05-28 19:11
  Status: 503
  Content-Type: text/html
  Size: 14 B

> content(ret)
{xml_document}
<html>
[1] <body><p>Shutting down!</p></body>
> 
